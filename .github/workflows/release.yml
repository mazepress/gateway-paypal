# Create a release asset
name: Build Release

on:
  # Runs on creating a new tag
  push:
    tags:
    - '*'

# Sets permissions of the GITHUB_TOKEN to create release
permissions:
  contents: write

jobs:
  # Build the packages
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install WP-CLI
        run: |
          wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp
          wp package install wp-cli/dist-archive-command

      - name: Install Composer
        run: |
          composer validate --strict
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev
          composer run-script build

      - name: Install NodeJs
        run: |
          npm install --silent --no-progress
          npm run build

      - name: Build Archive
        run: |
          mkdir -p ./build
          wp dist-archive . ./build/skeleton.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: ./build/skeleton.zip

# Deploy the packages
  deploy:
    name: Deploy

    # Wait for build to complete
    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: output
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create Release Asset
        id: create-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: skeleton.zip
          asset_name: skeleton.zip
          asset_content_type: application/zip
